# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) 2022 Scipp contributors (https://github.com/scipp)

name: Release

on:
  release:
    types: [published]
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}  # required for conda env

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Run this before any other commands so that git diff does not pick up formatting changes.
      - run: |
          find . -type f -not -path '.git/*' -exec sed -ri "s/[0-9]{4} (Scipp contributors)/$(date +%Y) \1/g" {} +
          git diff --exit-code
      - run: pip install flake8==4.0.1 nb-clean==2.1.0 yapf==0.32.0
      - run: find . -type f -regex '.*\.ipynb' | xargs nb-clean clean --remove-empty-cells --preserve-cell-metadata
      - run: yapf --recursive --in-place .
      - run: flake8 .
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply automatic formatting

  conda_build:
    needs: formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0  # history required so cmake can determine version
      - uses: conda-incubator/setup-miniconda@v2
      - run: conda install --channel conda-forge --yes conda-build mamba boa
      - run: conda mambabuild --channel conda-forge --channel scipp --channel mantid --no-anaconda-upload --override-channels --output-folder conda/package conda
      - uses: actions/upload-artifact@v2
        with:
          name: conda-package-ess
          path: conda/package/*/ess*.tar.bz2

  tests_and_docs:
    needs: conda_build
    runs-on: ubuntu-latest
    env:
      DOCS_HTML_DIR: ${{ github.workspace }}/docs_html
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: latest
          miniforge-variant: Mambaforge
          environment-file: .buildconfig/ci.yml
          activate-environment: ci
          auto-activate-base: false
      - uses: actions/download-artifact@v2
      - run: mamba install conda-package-*/*/*.tar.bz2
      - run: python -m pytest -v tests
      - run: python docs/make_docs.py

      - uses: actions/upload-artifact@v2
        with:
          name: DocumentationHTML
          path: ${{ env.DOCS_HTML_DIR }}

  deploy_package:
    needs: tests_and_docs
    runs-on: ubuntu-latest
    steps:
      - uses: conda-incubator/setup-miniconda@v2
      - run: conda install -c conda-forge --yes anaconda-client
      - uses: actions/download-artifact@v2
      - run: anaconda --token ${{ secrets.ANACONDATOKEN }} upload --user scipp --label main $(ls conda-package-*/*/*.tar.bz2)

  deploy_docs:
    needs: deploy_package
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1  # Avoid potential race condition when pushing to github pages
      matrix:
        docs-folder: ['latest', 'release']
    steps:
      - uses: actions/checkout@v2  # Need to checkout repo so github-pages-deploy-action works
      - uses: actions/download-artifact@v2
      - uses: JamesIves/github-pages-deploy-action@v4.3.4
        with:
          branch: gh-pages
          folder: DocumentationHTML
          target-folder: ${{ matrix.docs-folder == 'latest' && format('release/{0}', github.ref_name) || '' }}
          single-commit: true
          clean-exclude: release
